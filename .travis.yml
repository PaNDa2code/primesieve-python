language: python

jobs:
  include:
    # Build source distribution
    - services: docker
      python: 3.6
      env:
        - BUILD_SOURCE_DISTRIBUTION="true"
    # Linux builds
    - services: docker
      python: 3.5
    - services: docker
      python: 3.6
    - services: docker
      python: 3.7
    - services: docker
      python: 3.8
    # macOS builds
    - os: osx
      python: 3.5
      language: shell
    - os: osx
      python: 3.6
      language: shell
    - os: osx
      python: 3.7
      language: shell
    - os: osx
      python: 3.8
      language: shell
    # Windows builds
    - os: windows
      python: 3.5
      language: shell
      before_install:
        - choco install python --version 3.5.4
        - export PATH="/c/Python35:/c/Python$35/Scripts:$PATH"
    - os: windows
      python: 3.6
      language: shell
      before_install:
        - choco install python --version 3.6.0
        - export PATH="/c/Python36:/c/Python$36/Scripts:$PATH"
    - os: windows
      python: 3.7
      language: shell
      before_install:
        - choco install python --version 3.7.0
        - export PATH="/c/Python37:/c/Python$37/Scripts:$PATH"
    - os: windows
      python: 3.8
      language: shell
      before_install:
        - choco install python --version 3.8.0
        - export PATH="/c/Python38:/c/Python$38/Scripts:$PATH"

env:
  global:
    - TWINE_USERNAME=kimwalisch

install:
  - python -m pip install -U pip setuptools
  - python -m pip install -U cython numpy
  - python -m pip install -U pytest
  - python -m pip install -U twine
  - python -m pip install -U cibuildwheel

script:
  - git submodule update --init
  - python setup.py install
  - if [ "${TRAVIS_OS_NAME}" != "windows" ]; then pytest; fi
  - |
    if [ "$BUILD_SOURCE_DISTRIBUTION" = "true" ]
    then
        python setup.py sdist
        export UPLOAD_FILES=dist/*.tar.gz
    else
        export PYTHON_VERSION_WITHOUT_DOT=$(python -c 'import sys; print(str(sys.version_info[0])+str(sys.version_info[1]))')
        export CIBW_BUILD="cp$PYTHON_VERSION_WITHOUT_DOT-*"
        export CIBW_BEFORE_BUILD="python -m pip install -U cython numpy"
        python -m cibuildwheel --output-dir wheelhouse .
        export UPLOAD_FILES=wheelhouse/*.whl
    fi

after_success:
  - python -m twine upload --skip-existing --verbose --repository-url https://test.pypi.org/legacy/ $UPLOAD_FILES;
  - if [[ $TRAVIS_TAG ]]; then python -m twine upload --skip-existing --verbose $UPLOAD_FILES; fi
